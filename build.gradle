import com.google.common.base.CaseFormat

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    }
}

plugins {
    id 'org.kordamp.gradle.java-project'
}

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name        = 'Christmas Dinner'
        vendor      = 'Vladimir Orany'
        description = 'Gradle Configurations Showcase'

        links {
            website      = 'https://github.com/' + slug
            issueTracker = 'https://github.com/' + slug + '/issues'
            scm          = 'https://github.com/' + slug + '.git'
        }

        people {
            person {
                id    = 'musketyr'
                name  = 'Vladimir Orany'
                roles = ['developer']
            }
        }

        repositories {
            repository {
                name = 'localRelease'
                url  = '' + project.rootProject.buildDir + '/repos/local/release'
            }
            repository {
                name = 'localSnapshot'
                url  = '' + project.rootProject.buildDir + '/repos/local/snapshot'
            }
        }

        docs {
            javadoc {
                enabled = false
            }
        }
    }

    licensing {
        enabled = false
    }

}

allprojects {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/release"  }
    }

    license {
        exclude '**/*.json'
        exclude '***.yml'
    }
}

projects {
    subprojects {
        dirs(['dishes', 'ingredients', 'utensils', 'recipes']) { Project subproject ->
            sourceCompatibility = 1.8
            targetCompatibility = 1.8

            repositories {
                mavenCentral()
            }
        }
    }
}

subprojects { sub ->
    task createContent {
        doLast {
            String packageName = CaseFormat.LOWER_HYPHEN.to(CaseFormat.LOWER_UNDERSCORE, sub.name)
            String className = CaseFormat.LOWER_HYPHEN.to(CaseFormat.UPPER_CAMEL, sub.name)
            sub.file("src/main/java/${packageName}").mkdirs()
            if (sub.file("src/main/java/${packageName}/${className}.java").createNewFile()) {
                sub.file("src/main/java/${packageName}/${className}.java").write """
                package $packageName;

                public class ${className} { }
                """.stripIndent().trim()
            }
        }
    }

}
